<?php


abstract class AbstractModel // абстракт - невозможно создать объект из такого класса, он исключительно для наследования
{
    protected static $table; //должен быть статическим, чтобы можно было к нему обращаться через self
    protected static $class; //должен быть статическим, чтобы можно было к нему обращаться через self
    /**
     * статические свойства принадлежат только классу, а объекту. Они не доступны объекту через THIS->
     */

    public static function getAll() //получение всех новостей из базы (статический метод привязан только к классу, не знает ничего об объектах
    {
        /**
         * позволяет получить все записи из таблицы, имя которой передаётся в наследуемом классе
         *
         */
        $db = new DB();
        /**
         * self - вегда указывает класс, где он написан
         * Называется "Ранее статическое свазывание"
         * всегда родительский класс, а не тот, который будет наследовать
         * по этому нельзя написать ключевое свойство SELF:: в следующей строке
         * (класс-наследник не сможет переопределить свойство $table, он получит её от AbstractModel):
         *        $sql = 'SELECT * FROM ' . self::$table;
         * в данном случае придётся заменить ключевое свойство SELF:: на STATIC:: (статическое позднее связываение?)
         * static всегда будет ссылаться на конечный класс, который унаследовал свойство table
         */
        $sql = 'SELECT * FROM ' . static::$table;
//        echo $sql; die;
        return $db->queryAll($sql, static::$class); //строка запроса и название нужного класса в параметрах!
        /**
         * использование STATIC:: решает важную задачу обращения из родительского класса к дочернему
         * Если пишется абстрактный класс с методами, в которых нужно полагаться на дочерние классы (хотябы узнать имя дочернего)
         *
         * если нужно обязать реализовать в классах наследующих родительский какой-то метод, то нужно в абстрактном классе объявить:
         * abstract function className();
         */
    }

    public static function getOne($id) //получение одной новости по ид
    {
        $db = new DB();
        $sql = 'SELECT * FROM ' . static::$table . ' WHERE id=' . $id;
        return $db->queryOne($sql, static::$class);
    }

}